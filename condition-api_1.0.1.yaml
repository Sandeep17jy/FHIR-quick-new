swagger: '2.0'
info:
  title: condition-api
  x-ibm-name: condition-api
  version: 1.0.1
host: $(catalog.host)
schemes:
  - https
basePath: /ibmfhir
produces:
  - application/json
consumes:
  - application/json
security:
  - clientIdHeader: []
    clientSecretHeader: []
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
x-ibm-configuration:
  enforced: true
  testable: true
  cors:
    enabled: true
  assembly:
    execute:
      - switch:
          version: 2.0.0
          title: switch
          case:
            - condition: (($operationID() = 'Condition.create'))
              execute:
                - invoke:
                    version: 2.0.0
                    target-url: 'https://$(fhir_host)$(api.operation.path)'
                    verb: keep
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: blacklist
                      values: []
                    username: fhiruser
                    password: Pass@1234
            - condition: (($operationID() = 'Condition.get'))
              execute:
                - invoke:
                    version: 2.0.0
                    target-url: 'https://$(fhir_host)$(api.operation.path)'
                    verb: keep
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: blacklist
                      values: []
                    username: fhiruser
                    password: Pass@1234
          otherwise: []
    catch: []
  properties:
    fhir_host:
      value: 'gitlab.prolifics.com:9443/fhir-server/api/v4'
      description: Hostname of the DB resource
      encoded: false
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  activity-log:
    enabled: true
    error-content: header
    success-content: activity
  application-authentication:
    certificate: false
  catalogs: {}
definitions:
  Condition:
    description: >-
      A clinical condition, problem, diagnosis, or other event, situation,
      issue, or clinical concept that has risen to a level of concern.
    properties:
      resourceType:
        description: This is a Condition resource
        enum:
          - Condition
      id:
        description: >-
          The logical id of the resource, as used in the URL for the resource.
          Once assigned, this value never changes.
        $ref: '#/definitions/id'
      meta:
        description: >-
          The metadata about the resource. This is content that is maintained by
          the infrastructure. Changes to the content might not always be
          associated with version changes to the resource.
        $ref: '#/definitions/Meta'
      implicitRules:
        description: >-
          A reference to a set of rules that were followed when the resource was
          constructed, and which must be understood when processing the content.
          Often, this is a reference to an implementation guide that defines the
          special rules along with other profiles etc.
        $ref: '#/definitions/uri'
      language:
        description: The base language in which the resource is written.
        $ref: '#/definitions/code'
      text:
        description: >-
          A human-readable narrative that contains a summary of the resource and
          can be used to represent the content of the resource to a human. The
          narrative need not encode all the structured data, but is required to
          contain sufficient detail to make it "clinically safe" for a human to
          just read the narrative. Resource definitions may define what content
          should be represented in the narrative to ensure clinical safety.
        $ref: '#/definitions/Narrative'
      contained:
        description: >-
          These resources do not have an independent existence apart from the
          resource that contains them - they cannot be identified independently,
          and nor can they have their own independent transaction scope.
        items:
          $ref: '#/definitions/ResourceList'
        type: array
      identifier:
        description: >-
          Business identifiers assigned to this condition by the performer or
          other systems which remain constant as the resource is updated and
          propagates from server to server.
        items:
          $ref: '#/definitions/Identifier'
        type: array
      clinicalStatus:
        description: The clinical status of the condition.
        $ref: '#/definitions/CodeableConcept'
      verificationStatus:
        description: >-
          The verification status to support the clinical status of the
          condition.
        $ref: '#/definitions/CodeableConcept'
      category:
        description: A category assigned to the condition.
        items:
          $ref: '#/definitions/CodeableConcept'
        type: array
      severity:
        description: >-
          A subjective assessment of the severity of the condition as evaluated
          by the clinician.
        $ref: '#/definitions/CodeableConcept'
      code:
        description: 'Identification of the condition, problem or diagnosis.'
        $ref: '#/definitions/CodeableConcept'
      bodySite:
        description: The anatomical location where this condition manifests itself.
        items:
          $ref: '#/definitions/CodeableConcept'
        type: array
      subject:
        description: >-
          Indicates the patient or group who the condition record is associated
          with.
        $ref: '#/definitions/id'
      encounter:
        description: >-
          The Encounter during which this Condition was created or to which the
          creation of this record is tightly associated.
        $ref: '#/definitions/id'
      onsetDateTime:
        description: >-
          Estimated or actual date or date-time  the condition began, in the
          opinion of the clinician.
        pattern: >-
          ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
        type: string
      onsetAge:
        description: >-
          Estimated or actual date or date-time  the condition began, in the
          opinion of the clinician.
        $ref: '#/definitions/Age'
      onsetPeriod:
        description: >-
          Estimated or actual date or date-time  the condition began, in the
          opinion of the clinician.
        $ref: '#/definitions/Period'
      onsetRange:
        description: >-
          Estimated or actual date or date-time  the condition began, in the
          opinion of the clinician.
        $ref: '#/definitions/Range'
      onsetString:
        description: >-
          Estimated or actual date or date-time  the condition began, in the
          opinion of the clinician.
        pattern: '^[ \r\n\t\S]+$'
        type: string
      abatementDateTime:
        description: >-
          The date or estimated date that the condition resolved or went into
          remission. This is called "abatement" because of the many overloaded
          connotations associated with "remission" or "resolution" - Conditions
          are never really resolved, but they can abate.
        pattern: >-
          ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
        type: string
      abatementAge:
        description: >-
          The date or estimated date that the condition resolved or went into
          remission. This is called "abatement" because of the many overloaded
          connotations associated with "remission" or "resolution" - Conditions
          are never really resolved, but they can abate.
        $ref: '#/definitions/Age'
      abatementPeriod:
        description: >-
          The date or estimated date that the condition resolved or went into
          remission. This is called "abatement" because of the many overloaded
          connotations associated with "remission" or "resolution" - Conditions
          are never really resolved, but they can abate.
        $ref: '#/definitions/Period'
      abatementRange:
        description: >-
          The date or estimated date that the condition resolved or went into
          remission. This is called "abatement" because of the many overloaded
          connotations associated with "remission" or "resolution" - Conditions
          are never really resolved, but they can abate.
        $ref: '#/definitions/Range'
      abatementString:
        description: >-
          The date or estimated date that the condition resolved or went into
          remission. This is called "abatement" because of the many overloaded
          connotations associated with "remission" or "resolution" - Conditions
          are never really resolved, but they can abate.
        pattern: '^[ \r\n\t\S]+$'
        type: string
      recordedDate:
        description: >-
          The recordedDate represents when this particular Condition record was
          created in the system, which is often a system-generated date.
        $ref: '#/definitions/dateTime'
      recorder:
        description: >-
          Individual who recorded the record and takes responsibility for its
          content.
        $ref: '#/definitions/id'
      asserter:
        description: Individual who is making the condition statement.
        $ref: '#/definitions/id'
      stage:
        description: >-
          Clinical stage or grade of a condition. May include formal severity
          assessments.
        items:
          $ref: '#/definitions/Condition_Stage'
        type: array
      evidence:
        description: >-
          Supporting evidence / manifestations that are the basis of the
          Condition's verification status, such as evidence that confirmed or
          refuted the condition.
        items:
          $ref: '#/definitions/Condition_Evidence'
        type: array
      note:
        description: >-
          Additional information about the Condition. This is a general
          notes/comments entry  for description of the Condition, its diagnosis
          and prognosis.
        items:
          $ref: '#/definitions/Annotation'
        type: array
    additionalProperties: false
    required:
      - subject
      - resourceType
  id:
    pattern: '^[A-Za-z0-9\-\.]{1,64}$'
    type: string
    description: >-
      Any combination of letters, numerals, "-" and ".", with a length limit of
      64 characters.  (This might be an integer, an unprefixed OID, UUID or any
      other identifier pattern that meets these constraints.)  Ids are
      case-insensitive.
  Meta:
    description: >-
      The metadata about a resource. This is content in the resource that is
      maintained by the infrastructure. Changes to the content might not always
      be associated with version changes to the resource.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      versionId:
        description: >-
          The version specific identifier, as it appears in the version portion
          of the URL. This value changes when the resource is created, updated,
          or deleted.
        $ref: '#/definitions/id'
      lastUpdated:
        description: When the resource last changed - e.g. when the version changed.
        $ref: '#/definitions/instant'
      source:
        description: >-
          A uri that identifies the source system of the resource. This provides
          a minimal amount of [[[Provenance]]] information that can be used to
          track or differentiate the source of information in the resource. The
          source may identify another FHIR server, document, message, database,
          etc.
        $ref: '#/definitions/uri'
      profile:
        description: >-
          A list of profiles (references to [[[StructureDefinition]]] resources)
          that this resource claims to conform to. The URL is a reference to
          [[[StructureDefinition.url]]].
        items:
          $ref: '#/definitions/canonical'
        type: array
      security:
        description: >-
          Security labels applied to this resource. These tags connect specific
          resources to the overall security policy and infrastructure.
        items:
          $ref: '#/definitions/Coding'
        type: array
      tag:
        description: >-
          Tags applied to this resource. Tags are intended to be used to
          identify and relate resources to process and workflow, and
          applications are not required to consider the tags when interpreting
          the meaning of a resource.
        items:
          $ref: '#/definitions/Coding'
        type: array
    additionalProperties: false
  string:
    pattern: '^[ \r\n\t\S]+$'
    type: string
    description: A sequence of Unicode characters
  instant:
    pattern: >-
      ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
    type: string
    description: An instant in time - known at least to the second
  uri:
    pattern: ^\S*$
    type: string
    description: String of characters used to identify a name or a resource
  canonical:
    pattern: ^\S*$
    type: string
    description: A URI that is a reference to a canonical URL on a FHIR resource
  Coding:
    description: A reference to a code defined by a terminology system.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      system:
        description: >-
          The identification of the code system that defines the meaning of the
          symbol in the code.
        $ref: '#/definitions/uri'
      version:
        description: >-
          The version of the code system which was used when choosing this code.
          Note that a well-maintained code system does not need the version
          reported, because the meaning of codes is consistent across versions.
          However this cannot consistently be assured, and when the meaning is
          not guaranteed to be consistent, the version SHOULD be exchanged.
        $ref: '#/definitions/string'
      code:
        description: >-
          A symbol in syntax defined by the system. The symbol may be a
          predefined code or an expression in a syntax defined by the coding
          system (e.g. post-coordination).
        $ref: '#/definitions/code'
      display:
        description: >-
          A representation of the meaning of the code in the system, following
          the rules of the system.
        $ref: '#/definitions/string'
      userSelected:
        description: >-
          Indicates that this coding was chosen by a user directly - e.g. off a
          pick list of available items (codes or displays).
        $ref: '#/definitions/boolean'
    additionalProperties: false
  code:
    pattern: '^[^\s]+(\s[^\s]+)*$'
    type: string
    description: >-
      A string which has at least one character and no leading or trailing
      whitespace and where there is no whitespace other than single spaces in
      the contents
  boolean:
    pattern: ^true|false$
    type: boolean
    description: Value of "true" or "false"
  Narrative:
    description: >-
      A human-readable summary of the resource conveying the essential clinical
      and business information for the resource.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      status:
        description: >-
          The status of the narrative - whether it's entirely generated (from
          just the defined data or the extensions too), or whether a human
          authored it and it may contain additional data.
        enum:
          - generated
          - extensions
          - additional
          - empty
      div:
        description: 'The actual narrative content, a stripped down version of XHTML.'
        $ref: '#/definitions/xhtml'
    additionalProperties: false
    required:
      - div
  xhtml:
    description: xhtml - escaped html (see specfication)
  Identifier:
    description: >-
      An identifier - identifies some entity uniquely and unambiguously.
      Typically this is used for business identifiers.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      use:
        description: The purpose of this identifier.
        enum:
          - usual
          - official
          - temp
          - secondary
          - old
      type:
        description: >-
          A coded type for the identifier that can be used to determine which
          identifier to use for a specific purpose.
        $ref: '#/definitions/CodeableConcept'
      system:
        description: >-
          Establishes the namespace for the value - that is, a URL that
          describes a set values that are unique.
        $ref: '#/definitions/uri'
      value:
        description: >-
          The portion of the identifier typically relevant to the user and which
          is unique within the context of the system.
        $ref: '#/definitions/string'
      period:
        description: Time period during which identifier is/was valid for use.
        $ref: '#/definitions/Period'
      assigner:
        description: Organization that issued/manages the identifier.
        $ref: '#/definitions/id'
    additionalProperties: false
  CodeableConcept:
    description: >-
      A concept that may be defined by a formal reference to a terminology or
      ontology or may be provided by text.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      coding:
        description: A reference to a code defined by a terminology system.
        items:
          $ref: '#/definitions/Coding'
        type: array
      text:
        description: >-
          A human language representation of the concept as
          seen/selected/uttered by the user who entered the data and/or which
          represents the intended meaning of the user.
        $ref: '#/definitions/string'
    additionalProperties: false
  Period:
    description: A time period defined by a start and end date and optionally time.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      start:
        description: The start of the period. The boundary is inclusive.
        $ref: '#/definitions/dateTime'
      end:
        description: >-
          The end of the period. If the end of the period is missing, it means
          no end was known or planned at the time the instance was created. The
          start may be in the past, and the end date in the future, which means
          that period is expected/planned to end at that time.
        $ref: '#/definitions/dateTime'
    additionalProperties: false
  dateTime:
    pattern: >-
      ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
    type: string
    description: >-
      A date, date-time or partial date (e.g. just year or year + month).  If
      hours and minutes are specified, a time zone SHALL be populated. The
      format is a union of the schema types gYear, gYearMonth, date and
      dateTime. Seconds must be provided due to schema type constraints but may
      be zero-filled and may be ignored.                 Dates SHALL be valid
      dates.
  Age:
    description: A duration of time during which an organism (or a process) has existed.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      value:
        description: >-
          The value of the measured amount. The value includes an implicit
          precision in the presentation of the value.
        $ref: '#/definitions/decimal'
      comparator:
        description: >-
          How the value should be understood and represented - whether the
          actual value is greater or less than the stated value due to
          measurement issues; e.g. if the comparator is "<" , then the real
          value is < stated value.
        enum:
          - <
          - <=
          - '>='
          - '>'
      unit:
        description: A human-readable form of the unit.
        $ref: '#/definitions/string'
      system:
        description: >-
          The identification of the system that provides the coded form of the
          unit.
        $ref: '#/definitions/uri'
      code:
        description: >-
          A computer processable form of the unit in some unit representation
          system.
        $ref: '#/definitions/code'
    additionalProperties: false
  decimal:
    pattern: '^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$'
    type: number
    description: A rational number with implicit precision
  Range:
    description: A set of ordered Quantities defined by a low and high limit.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      low:
        description: The low limit. The boundary is inclusive.
        $ref: '#/definitions/Quantity'
      high:
        description: The high limit. The boundary is inclusive.
        $ref: '#/definitions/Quantity'
    additionalProperties: false
  Quantity:
    description: >-
      A measured amount (or an amount that can potentially be measured). Note
      that measured amounts include amounts that are not precisely quantified,
      including amounts involving arbitrary units and floating currencies.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      value:
        description: >-
          The value of the measured amount. The value includes an implicit
          precision in the presentation of the value.
        $ref: '#/definitions/decimal'
      comparator:
        description: >-
          How the value should be understood and represented - whether the
          actual value is greater or less than the stated value due to
          measurement issues; e.g. if the comparator is "<" , then the real
          value is < stated value.
        enum:
          - <
          - <=
          - '>='
          - '>'
      unit:
        description: A human-readable form of the unit.
        $ref: '#/definitions/string'
      system:
        description: >-
          The identification of the system that provides the coded form of the
          unit.
        $ref: '#/definitions/uri'
      code:
        description: >-
          A computer processable form of the unit in some unit representation
          system.
        $ref: '#/definitions/code'
    additionalProperties: false
  Condition_Stage:
    description: >-
      A clinical condition, problem, diagnosis, or other event, situation,
      issue, or clinical concept that has risen to a level of concern.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      summary:
        description: >-
          A simple summary of the stage such as "Stage 3". The determination of
          the stage is disease-specific.
        $ref: '#/definitions/CodeableConcept'
      assessment:
        description: >-
          Reference to a formal record of the evidence on which the staging
          assessment is based.
        items:
          $ref: '#/definitions/id'
        type: array
      type:
        description: 'The kind of staging, such as pathological or clinical staging.'
        $ref: '#/definitions/CodeableConcept'
    additionalProperties: false
  Condition_Evidence:
    description: >-
      A clinical condition, problem, diagnosis, or other event, situation,
      issue, or clinical concept that has risen to a level of concern.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      code:
        description: >-
          A manifestation or symptom that led to the recording of this
          condition.
        items:
          $ref: '#/definitions/CodeableConcept'
        type: array
      detail:
        description: 'Links to other relevant information, including pathology reports.'
        items:
          $ref: '#/definitions/id'
        type: array
    additionalProperties: false
  Annotation:
    description: >-
      A  text note which also  contains information about who made the statement
      and when.
    properties:
      id:
        description: >-
          Unique id for the element within a resource (for internal references).
          This may be any string value that does not contain spaces.
        $ref: '#/definitions/string'
      authorReference:
        description: The individual responsible for making the annotation.
        $ref: '#/definitions/id'
      authorString:
        description: The individual responsible for making the annotation.
        pattern: '^[ \r\n\t\S]+$'
        type: string
      time:
        description: Indicates when this particular annotation was made.
        $ref: '#/definitions/dateTime'
      text:
        description: The text of the annotation in markdown format.
        $ref: '#/definitions/markdown'
    additionalProperties: false
  markdown:
    pattern: '^[ \r\n\t\S]+$'
    type: string
    description: >-
      A string that may contain Github Flavored Markdown syntax for optional
      processing by a mark down presentation engine
  ResourceList:
    $ref: '#/definitions/Condition'
paths:
  '/Condition/{ConditionId}':
    get:
      operationId: Condition.get
      responses:
        '200':
          description: 200 OK
      parameters:
        - name: ConditionId
          type: string
          required: true
          in: path
  /Condition:
    post:
      tags:
        - Condition
      summary: Create a new instance of the model and persist it into the data source.
      operationId: Condition.create
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Condition'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Condition'
      deprecated: false
    put:
      tags:
        - Condition
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: Condition.upsert__put_Conditions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Condition'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Condition'
      deprecated: false
    patch:
      tags:
        - Condition
      summary: >-
        Patch an existing model instance or insert a new one into the data
        source.
      operationId: Condition.upsert__patch_Conditions
      parameters:
        - name: data
          in: body
          description: Model instance data
          required: false
          schema:
            description: Model instance data
            $ref: '#/definitions/Condition'
      responses:
        '200':
          description: Request was successful
          schema:
            $ref: '#/definitions/Condition'
      deprecated: false
